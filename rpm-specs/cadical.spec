%global giturl  https://github.com/arminbiere/cadical

Name:           cadical
Epoch:          1
Version:        2.0.0
Release:        %autorelease
Summary:        Simplified SAT solver

License:        MIT
URL:            http://fmv.jku.at/cadical/
VCS:            git:%{giturl}.git
Source:         %{giturl}/archive/rel-%{version}/%{name}-%{version}.tar.gz
# Fedora-only patch: build a shared library instead of a static library
Patch:          %{name}-shared.patch

# See https://fedoraproject.org/wiki/Changes/EncourageI686LeafRemoval
ExcludeArch:    %{ix86}

BuildRequires:  drat-trim-tools
BuildRequires:  gcc-c++
BuildRequires:  glibc-langpack-en
BuildRequires:  help2man
BuildRequires:  make
BuildRequires:  zlib-devel

Requires:       %{name}-libs%{?_isa} = %{epoch}:%{version}-%{release}

%description
CaDiCaL is a simplified Satisfiability solver.  The goal of the
development of CaDiCaL is to obtain a CDCL solver, which is easy to
understand and change, while at the same time not being much slower
than other state-of-the-art CDCL solvers.

%package libs
Summary:        Simplified SAT solver library

%description libs
This package contains the CaDiCaL simplified Satisfiability solver as a
library, for use in applications that need a SAT solver.

%package devel
Summary:        Development files for %{name}
Requires:       %{name}-libs%{?_isa} = %{epoch}:%{version}-%{release}

%description devel
Library links and header files for developing applications that use
%{name}.

%prep
%autosetup -p0 -n %{name}-rel-%{version}

%build
# The configure script is NOT generated by autoconf.  Do NOT use the
# %%configure macro here.
CXXFLAGS="%{build_cxxflags} -fPIC" ./configure
sed -i "s|@LDFLAGS@|%{build_ldflags}|" build/makefile
%make_build

# Make man pages for the command line interface
export LD_LIBRARY_PATH=$PWD/build
help2man --version-string=%{version} -N -o cadical.1 \
  -n 'Simplified SAT solver' build/cadical
help2man --version-string=%{version} -N -o mobical.1 -h -h \
  -n 'Model Based Tester for CaDiCaL' build/mobical

%install
# The makefile has no install target.  Install by hand.
# Install the binaries
mkdir -p %{buildroot}%{_bindir}
cp -p build/{cad,mob}ical %{buildroot}%{_bindir}

# Install the library
mkdir -p %{buildroot}%{_libdir}
cp -p build/libcadical.so.0.0.0 %{buildroot}%{_libdir}
ln -s libcadical.so.0.0.0 %{buildroot}%{_libdir}/libcadical.so.0
ln -s libcadical.so.0 %{buildroot}%{_libdir}/libcadical.so

# Install the header files
mkdir -p %{buildroot}%{_includedir}/%{name}
cp -p src/*.{h,hpp} %{buildroot}%{_includedir}/%{name}
ln -s %{name}/cadical.hpp %{buildroot}%{_includedir}
ln -s %{name}/ccadical.h %{buildroot}%{_includedir}

# Install the man pages
mkdir -p %{buildroot}%{_mandir}/man1
cp -p *.1 %{buildroot}%{_mandir}/man1

%check
# Prevent rebuilding the library while testing
sed -i '/make -C \$CADICALBUILD/d;/^make$/d' test/*/run.sh

# Some mobical tests randomly fail due to exceeding time or memory limits.
# Turn those tests off.
sed -i 's/ mbt$//' test/makefile

export LD_LIBRARY_PATH=$PWD/build
make -C test

%files
%{_bindir}/cadical
%{_bindir}/mobical
%{_mandir}/man1/cadical.1*
%{_mandir}/man1/mobical.1*

%files libs
%license LICENSE
%doc NEWS.md README.md
%{_libdir}/lib%{name}.so.0*

%files devel
%{_includedir}/%{name}.hpp
%{_includedir}/c%{name}.h
%{_includedir}/%{name}/
%{_libdir}/lib%{name}.so

%changelog
%autochangelog
