# generated by cabal-rpm-2.2.1
# https://docs.fedoraproject.org/en-US/packaging-guidelines/Haskell/

%global pkg_name fmt
%global pkgver %{pkg_name}-%{version}
%{?haskell_setup}

# testsuite missing deps: neat-interpolation

Name:           ghc-%{pkg_name}
Version:        0.6.3.0
Release:        %autorelease
Summary:        A new formatting library

License:        BSD-3-Clause
Url:            https://hackage.haskell.org/package/%{pkg_name}
# Begin cabal-rpm sources:
Source0:        https://hackage.haskell.org/package/%{pkgver}/%{pkgver}.tar.gz
# End cabal-rpm sources

# Begin cabal-rpm deps:
BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-base-devel
BuildRequires:  ghc-base64-bytestring-devel
BuildRequires:  ghc-bytestring-devel
BuildRequires:  ghc-call-stack-devel
BuildRequires:  ghc-containers-devel
BuildRequires:  ghc-formatting-devel
BuildRequires:  ghc-microlens-devel
BuildRequires:  ghc-text-devel
BuildRequires:  ghc-time-devel
BuildRequires:  ghc-time-locale-compat-devel
%if %{with ghc_prof}
BuildRequires:  ghc-base-prof
BuildRequires:  ghc-base64-bytestring-prof
BuildRequires:  ghc-bytestring-prof
BuildRequires:  ghc-call-stack-prof
BuildRequires:  ghc-containers-prof
BuildRequires:  ghc-formatting-prof
BuildRequires:  ghc-microlens-prof
BuildRequires:  ghc-text-prof
BuildRequires:  ghc-time-prof
BuildRequires:  ghc-time-locale-compat-prof
%endif
# End cabal-rpm deps

%description
A new formatting library that tries to be simple to understand while still
being powerful and providing more convenience features than other libraries
(like functions for pretty-printing maps and lists, or a function for printing
arbitrary datatypes using generics).

A comparison with other libraries:

* 'printf' (from 'Text.Printf') takes a formatting string and uses some type
tricks to accept the rest of the arguments polyvariadically. It's very concise,
but there are some drawbacks â€“ it can't produce 'Text' (you'd have to 'T.pack'
it every time) and it doesn't warn you at compile-time if you pass wrong
arguments or not enough of them.

* <https://hackage.haskell.org/package/text-format text-format> takes a
formatting string with curly braces denoting places where arguments would be
substituted (the arguments themselves are provided via a tuple). If you want to
apply formatting to some of the arguments, you have to use one of the provided
formatters. Like 'printf', it can fail at runtime, but at least the formatters
are first-class (and you can add new ones).

* <https://hackage.haskell.org/package/formatting formatting> takes a
formatting template consisting of pieces of strings interleaved with
formatters; this ensures that arguments always match their placeholders.
'formatting' provides lots of formatters and generally seems to be the most
popular formatting library here. Unfortunately, at least in my experience
writing new formatters can be awkward and people sometimes have troubles
understanding how 'formatting' works.

* <https://hackage.haskell.org/package/fmt fmt> (i.e. this library) provides
formatters that are ordinary functions, and a bunch of operators for
concatenating formatted strings; those operators also do automatic conversion.
There are some convenience formatters which aren't present in 'formatting'
(like ones for formatting maps, lists, converting to base64, etc).
Some find the operator syntax annoying, while others like it.


%package devel
Summary:        Haskell %{pkg_name} library development files
Provides:       %{name}-static = %{version}-%{release}
Provides:       %{name}-static%{?_isa} = %{version}-%{release}
%if %{defined ghc_version}
Requires:       ghc-compiler = %{ghc_version}
%endif
Requires:       %{name}%{?_isa} = %{version}-%{release}

%description devel
This package provides the Haskell %{pkg_name} library development files.


%if %{with haddock}
%package doc
Summary:        Haskell %{pkg_name} library documentation
BuildArch:      noarch
Requires:       ghc-filesystem

%description doc
This package provides the Haskell %{pkg_name} library documentation.
%endif


%if %{with ghc_prof}
%package prof
Summary:        Haskell %{pkg_name} profiling library
Requires:       %{name}-devel%{?_isa} = %{version}-%{release}
Supplements:    (%{name}-devel and ghc-prof)

%description prof
This package provides the Haskell %{pkg_name} profiling library.
%endif


%prep
# Begin cabal-rpm setup:
%setup -q -n %{pkgver}
# End cabal-rpm setup


%build
# Begin cabal-rpm build:
%ghc_lib_build
# End cabal-rpm build


%install
# Begin cabal-rpm install
%ghc_lib_install
# End cabal-rpm install


%files -f %{name}.files
# Begin cabal-rpm files:
%license LICENSE
# End cabal-rpm files


%files devel -f %{name}-devel.files
%doc CHANGELOG.md


%if %{with haddock}
%files doc -f %{name}-doc.files
%license LICENSE
%endif


%if %{with ghc_prof}
%files prof -f %{name}-prof.files
%endif


%changelog
%autochangelog
