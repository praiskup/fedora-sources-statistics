# generated by cabal-rpm-2.2.0
# https://docs.fedoraproject.org/en-US/packaging-guidelines/Haskell/

%global pkg_name lumberjack
%global pkgver %{pkg_name}-%{version}
%{?haskell_setup}

Name:           ghc-%{pkg_name}
Version:        1.0.3.0
Release:        %autorelease
Summary:        Trek through your code forest and make logs

License:        ISC
Url:            https://hackage.haskell.org/package/%{pkg_name}
# Begin cabal-rpm sources:
Source0:        https://hackage.haskell.org/package/%{pkgver}/%{pkgver}.tar.gz
Source1:        https://hackage.haskell.org/package/%{pkgver}/%{pkg_name}.cabal#/%{pkgver}.cabal
# End cabal-rpm sources

# Begin cabal-rpm deps:
BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-base-devel
BuildRequires:  ghc-contravariant-devel
BuildRequires:  ghc-exceptions-devel
BuildRequires:  ghc-mtl-devel
BuildRequires:  ghc-prettyprinter-devel
BuildRequires:  ghc-prettyprinter-ansi-terminal-devel
BuildRequires:  ghc-text-devel
BuildRequires:  ghc-time-devel
%if %{with ghc_prof}
BuildRequires:  ghc-base-prof
BuildRequires:  ghc-contravariant-prof
BuildRequires:  ghc-exceptions-prof
BuildRequires:  ghc-mtl-prof
BuildRequires:  ghc-prettyprinter-prof
BuildRequires:  ghc-prettyprinter-ansi-terminal-prof
BuildRequires:  ghc-text-prof
BuildRequires:  ghc-time-prof
%endif
# End cabal-rpm deps

%description
This is a logging facility. Yes, there are many, and this is the one with a
beard, wearing flannel and boots, that gets the job done. It's not the
fanciest, it doesn't have a cargo-van full of features. This logger is designed
to be straightforward to use, provide a good set of standard features, and be
useable across a broad set of code.

* Logging itself is a monadic activity. This activity is most often performed
in a monad stack with a MonadIO context to allow writing to files.

* The specific logging action implementations are managed separately from the
actions of logging messages in the target code. This allows logging to be
configurable and the manner of logging to be specified at startup time without
requiring changes in the code from which log messages are being generated.

* The logging implementation code can use contravariant functors to adjust
existing logging.

* Main code will typically retrieve the logging actions from a Reader context
in your monad stack. That said, Log actions are not tied to an enclosing Monad.
There are helpers to support a Monad which can store Log actions, but Log
actions can also be explicitly passed and used.

* The prettyprinter package is used for formatting.


%package devel
Summary:        Haskell %{pkg_name} library development files
Provides:       %{name}-static = %{version}-%{release}
Provides:       %{name}-static%{?_isa} = %{version}-%{release}
%if %{defined ghc_version}
Requires:       ghc-compiler = %{ghc_version}
%endif
Requires:       %{name}%{?_isa} = %{version}-%{release}

%description devel
This package provides the Haskell %{pkg_name} library development files.


%if %{with haddock}
%package doc
Summary:        Haskell %{pkg_name} library documentation
BuildArch:      noarch
Requires:       ghc-filesystem

%description doc
This package provides the Haskell %{pkg_name} library documentation.
%endif


%if %{with ghc_prof}
%package prof
Summary:        Haskell %{pkg_name} profiling library
Requires:       %{name}-devel%{?_isa} = %{version}-%{release}
Supplements:    (%{name}-devel and ghc-prof)

%description prof
This package provides the Haskell %{pkg_name} profiling library.
%endif


%prep
# Begin cabal-rpm setup:
%setup -q -n %{pkgver}
cp -bp %{SOURCE1} %{pkg_name}.cabal
# End cabal-rpm setup


%build
# Begin cabal-rpm build:
%ghc_lib_build
# End cabal-rpm build


%install
# Begin cabal-rpm install
%ghc_lib_install
# End cabal-rpm install


%files -f %{name}.files
# Begin cabal-rpm files:
%license LICENSE
# End cabal-rpm files


%files devel -f %{name}-devel.files
%doc CHANGELOG.md example
%{_bindir}/example_log


%if %{with haddock}
%files doc -f %{name}-doc.files
%license LICENSE
%endif


%if %{with ghc_prof}
%files prof -f %{name}-prof.files
%endif


%changelog
%autochangelog
