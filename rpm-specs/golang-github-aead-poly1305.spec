# Generated by go2rpm
%bcond_without check
# Avoid noarch package built differently on different architectures
%global debug_package %{nil}

%global __requires_exclude %{?__requires_exclude:%{__requires_exclude}|}^golang\\(golang.org/x/sys/cpu\\)$

# https://github.com/aead/poly1305
%global goipath         github.com/aead/poly1305
%global commit          3fee0db0b63511234f7230da50b72414f6258f10

%gometa

%global godevelheader %{expand:
Requires:       golang(golang.org/x/sys/cpu)}

%global common_description %{expand:
Poly1305 is a fast, one-time authentication function created by Daniel J.
Bernstein. It is infeasible for an attacker to generate an authenticator for a
message without the key. However, a key must only be used for a single message.
Authenticating two different messages with the same key allows an attacker to
forge authenticators for other messages with the same key.}

%global golicenses      LICENSE
%global godocs          README.md

Name:           %{goname}
Version:        0
Release:        %autorelease
Summary:        Poly1305 message authentication code

License:        MIT
URL:            %{gourl}
Source0:        %{gosource}

BuildRequires:  golang(golang.org/x/sys/cpu)

%description
%{common_description}

%gopkg

%prep
%goprep

%install
%gopkginstall

%if %{with check}
%check
%gocheck
%endif

%gopkgfiles

%changelog
%autochangelog
