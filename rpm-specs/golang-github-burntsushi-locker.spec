# Generated by go2rpm
%bcond_without check

%global debug_package %{nil}

# https://github.com/BurntSushi/locker
%global goipath         github.com/BurntSushi/locker
%global commit          a6e239ea1c69bff1cfdb20c4b73dadf52f784b6a

%gometa

%global common_description %{expand:
Package Locker is a simple package to manage named ReadWrite mutexes. These
appear to be especially useful for synchronizing access to session based
information in web applications.

The common use case is to use the package level functions, which use a package
level set of locks (safe to use from multiple goroutines simultaneously).
However, you may also create a new separate set of locks.

All locks are implemented with read-write mutexes. To use them like a regular
mutex, simply ignore the RLock/RUnlock functions.}

%global golicenses      UNLICENSE
%global godocs          README.md

Name:           %{goname}
Version:        0
Release:        %autorelease
Summary:        Simple Golang package for conveniently using named read/write locks

License:        Unlicense
URL:            %{gourl}
Source0:        %{gosource}

%description
%{common_description}

%gopkg

%prep
%goprep

%install
%gopkginstall

%if %{with check}
%check
%gocheck
%endif

%gopkgfiles

%changelog
%autochangelog
