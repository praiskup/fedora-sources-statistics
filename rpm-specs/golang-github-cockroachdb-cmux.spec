# Generated by go2rpm
%bcond_without check

%global debug_package %{nil}

# https://github.com/cockroachdb/cmux
%global goipath         github.com/cockroachdb/cmux
%global commit          30d10be492927e2dcae0089c374c455d42414fcb

%gometa

%global common_description %{expand:
Cmux is a generic Go library to multiplex connections based on their payload.
Using cmux, you can serve gRPC, SSH, HTTPS, HTTP, Go RPC, and pretty much any
other protocol on the same TCP listener.}

%global golicenses      LICENSE
%global godocs          CONTRIBUTORS README.md

%global gosupfiles      glide.lock glide.yaml

Name:           %{goname}
Version:        0
Release:        %autorelease
Summary:        Connection multiplexer for GoLang: serve different services on the same port

# Upstream license specification: Apache-2.0
# Automatically converted from old format: ASL 2.0 - review is highly recommended.
License:        Apache-2.0
URL:            %{gourl}
Source0:        %{gosource}
Source1:        glide.yaml
Source2:        glide.lock

BuildRequires:  golang(golang.org/x/net/http2)
BuildRequires:  golang(golang.org/x/net/http2/hpack)
BuildRequires:  golang(google.golang.org/grpc)
BuildRequires:  golang(google.golang.org/grpc/internal/transport)

%description
%{common_description}

%gopkg

%prep
%goprep
cp %{S:1} %{S:2} .

%install
%gopkginstall

%if %{with check}
%check
rm example_test.go
%gocheck
%endif

%gopkgfiles

%changelog
%autochangelog
