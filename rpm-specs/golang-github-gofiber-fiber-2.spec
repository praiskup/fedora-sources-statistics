# Generated by go2rpm 1.14.0
%bcond check 1
%bcond bootstrap 0

%global debug_package %{nil}
%if %{with bootstrap}
%global __requires_exclude %{?__requires_exclude:%{__requires_exclude}|}^golang\\(.*\\)$
%endif

# https://github.com/gofiber/fiber
%global goipath         github.com/gofiber/fiber/v2
Version:                2.48.0

%gometa -f

%global common_description %{expand:
Express inspired web framework written in Go.}

%global golicenses      LICENSE
%global godocs          docs utils/README.md

Name:           golang-github-gofiber-fiber-2
Release:        %autorelease
Summary:        Express inspired web framework written in Go

License:        MIT AND BSD-3-Clause
URL:            %{gourl}
Source:         %{gosource}

%description %{common_description}

%gopkg

%prep
%goprep -A
%autopatch -p1
rm -rfv internal/go-ole internal/wmi

%if %{without bootstrap}
%generate_buildrequires
%go_generate_buildrequires
%endif

%install
%gopkginstall

%if %{without bootstrap}
%if %{with check}
%check
# needs network
for test in "Test_Proxy_Do_WithRealURL" \
            "Test_Proxy_Do_WithRedirect" \
            "Test_Proxy_DoRedirects_RestoreOriginalURL" \
            "Test_Proxy_DoRedirects_TooManyRedirects" \
            "Test_Storage_Memory_Get" \
            "Test_Storage_Memory_Delete" \
            "Test_Limiter_Sliding_Window_Custom_Storage_Skip_Successful_Requests" \
            "Test_Limiter_Sliding_Window_Skip_Successful_Requests" \
            "Test_Limiter_Sliding_Window_Custom_Storage_Skip_Failed_Requests" \
            "Test_Limiter_Sliding_Window_Skip_Failed_Requests" \
            "Test_Idempotency" \
            "Test_Session_Save_Expiration" \
            "Test_CustomExpiration" \
            "Test_Client_UserAgent" \
            "Test_Client_Agent_Dest" \
            "Test_Pprof_Subs" \
; do
awk -i inplace '/^func.*'"$test"'\(/ { print; print "\tt.Skip(\"disabled failing test\")"; next}1' $(grep -rl $test)
done
%gocheck
%endif
%endif

%gopkgfiles

%changelog
%autochangelog
