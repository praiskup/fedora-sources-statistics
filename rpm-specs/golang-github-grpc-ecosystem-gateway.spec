# Generated by go2rpm
%ifnarch %{ix86} %{arm}
%bcond_without check
%endif

# https://github.com/grpc-ecosystem/grpc-gateway
%global goipath         github.com/grpc-ecosystem/grpc-gateway
%global commit          26318a510414ca4d63a664faab34ec717e77d97b
Version:                1.16.0

%gometa

%global common_description %{expand:
The grpc-gateway is a plugin of the Google protocol buffers compiler protoc.
It reads protobuf service definitions and generates a reverse-proxy server
which translates a RESTful JSON API into gRPC. This server is generated
according to the google.api.http annotations in your service definitions.}

%global golicenses      LICENSE.txt
%global godocs          docs examples CHANGELOG.md CONTRIBUTING.md README.md

Name:           %{goname}
Release:        %autorelease
Summary:        GRPC to JSON proxy generator

# Upstream license specification: BSD-3-Clause
# Automatically converted from old format: BSD - review is highly recommended.
License:        LicenseRef-Callaway-BSD
URL:            %{gourl}
Source0:        %{gosource}

BuildRequires:  golang(github.com/antihax/optional)                                          
BuildRequires:  golang(github.com/ghodss/yaml)                                               
BuildRequires:  golang(github.com/golang/glog)                                               
BuildRequires:  golang(github.com/golang/protobuf/descriptor)                                
BuildRequires:  golang(github.com/golang/protobuf/jsonpb)                                    
BuildRequires:  golang(github.com/golang/protobuf/proto)                                     
BuildRequires:  golang(github.com/golang/protobuf/protoc-gen-go/descriptor)                  
BuildRequires:  golang(github.com/golang/protobuf/protoc-gen-go/plugin)                      
BuildRequires:  golang(github.com/golang/protobuf/ptypes/any)
BuildRequires:  golang(github.com/golang/protobuf/ptypes/duration)
BuildRequires:  golang(github.com/golang/protobuf/ptypes/empty)
BuildRequires:  golang(github.com/golang/protobuf/ptypes/struct)
BuildRequires:  golang(github.com/golang/protobuf/ptypes/timestamp)
BuildRequires:  golang(github.com/golang/protobuf/ptypes/wrappers)
BuildRequires:  golang(github.com/rogpeppe/fastuuid)
BuildRequires:  golang(golang.org/x/oauth2)
BuildRequires:  golang(google.golang.org/genproto/googleapis/api/annotations)
BuildRequires:  golang(google.golang.org/genproto/googleapis/api/httpbody)
BuildRequires:  golang(google.golang.org/genproto/googleapis/rpc/errdetails)
BuildRequires:  golang(google.golang.org/genproto/protobuf/field_mask)
BuildRequires:  golang(google.golang.org/grpc) 
BuildRequires:  golang(google.golang.org/grpc/codes)
BuildRequires:  golang(google.golang.org/grpc/connectivity)
BuildRequires:  golang(google.golang.org/grpc/grpclog)
BuildRequires:  golang(google.golang.org/grpc/metadata)
BuildRequires:  golang(google.golang.org/grpc/status)

%description
%{common_description}

%gopkg

%prep
%goprep

%build
for cmd in protoc-gen-swagger protoc-gen-grpc-gateway; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done

%install
%gopkginstall
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/

%if %{with check}
%check
%gocheck -d runtime -d codegenerator
%endif

%files
%license %{golicenses}
%doc %{godocs}
%{_bindir}/*

%gopkgfiles

%changelog
%autochangelog
