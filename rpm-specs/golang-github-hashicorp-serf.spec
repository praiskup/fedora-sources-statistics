# Generated by go2rpm 1.8.1
# https://github.com/hashicorp/serf/issues/568
%if 0%{?__isa_bits} != 32
%bcond_without check
%endif

# https://github.com/hashicorp/serf
%global goipath         github.com/hashicorp/serf
Version:                0.10.0

%gometa

%global common_description %{expand:
Serf is a decentralized solution for service discovery and orchestration that is
lightweight, highly available, and fault tolerant.

Serf runs on Linux, Mac OS X, and Windows. An efficient and lightweight gossip
protocol is used to communicate with other nodes. Serf can detect node failures
and notify the rest of the cluster. An event system is built on top of Serf,
letting you use Serf's gossip protocol to propagate events such as deploys,
configuration changes, etc. Serf is completely masterless with no single point
of failure.

Here are some example use cases of Serf, though there are many others:

 - Discovering web servers and automatically adding them to a load balancer
 - Organizing many memcached or redis nodes into a cluster, perhaps with
   something like twemproxy or maybe just configuring an application with the
   address of all the nodes
 - Triggering web deploys using the event system built on top of Serf
 - Propagating changes to configuration to relevant nodes.
 - Updating DNS records to reflect cluster changes as they occur.
 - Much, much more.}

%global golicenses      LICENSE
%global godocs          CHANGELOG.md README.md

Name:           %{goname}
Release:        %autorelease
Summary:        Service orchestration and management tool

License:        MPL-2.0
URL:            %{gourl}
Source:         %{gosource}
Patch0:         0001-fix-codec.MsgpackHandle.patch

%description %{common_description}

%gopkg

%prep
%goprep
%patch -P0 -p1

%generate_buildrequires
%go_generate_buildrequires

%build
for cmd in cmd/* ; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done

%install
%gopkginstall
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/

%if %{with check}
%check
for test in "TestSyslogFilter" \
            "TestCommandRun_mDNS" \
; do
awk -i inplace '/^func.*'"$test"'/ { print; print "\tt.Skip(\"disabled failing test\")"; next}1' $(grep -rl $test)
done
%gocheck -d serf
%endif

%files
%license LICENSE
%doc CHANGELOG.md README.md
%{_bindir}/serf

%gopkgfiles

%changelog
%autochangelog
