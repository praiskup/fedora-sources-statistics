# Generated by go2rpm
%bcond_without check

%global debug_package %{nil}

# https://github.com/hashicorp/go-syslog
%global goipath         github.com/hashicorp/go-syslog
Version:                1.0.0

%gometa

# Remove in F33:
%global godevelheader %{expand:
Obsoletes:      golang-github-hashicorp-go-syslog-devel < 0-0.16
}

%global common_description %{expand:
This package provides a very simple gsyslog package. The point of this package
is to allow safe importing of syslog without introducing cross-compilation
issues. The stdlib log/syslog cannot be imported on Windows systems, and without
conditional compilation this adds complications.

Instead, gsyslog provides a very simple wrapper around log/syslog but returns a
runtime error if attempting to initialize on a non Linux or OSX system.}

%global golicenses      LICENSE
%global godocs          README.md

%global gosupfiles glide.lock glide.yaml

Name:           %{goname}
Release:        %autorelease
Summary:        Golang syslog wrapper, cross-compile friendly

License:        MIT
URL:            %{gourl}
Source0:        %{gosource}
Source1:        glide.yaml
Source2:        glide.lock

%description
%{common_description}

%gopkg

%prep
%goprep
cp %{S:1} %{S:2} .

%install
%gopkginstall

# Remove in F33
# Remove erroneous glide.lock folder
%pretrans devel -p <lua>
path = "%{gopath}/src/%{goipath}/glide.lock"
st = posix.stat(path)
if st and st.type == "directory" then
  os.remove(path)
end

%if %{with check}
%check
%gocheck
%endif

%gopkgfiles

%changelog
%autochangelog
