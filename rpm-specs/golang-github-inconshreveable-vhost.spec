# Generated by go2rpm
%bcond_without check

%global debug_package %{nil}

# https://github.com/inconshreveable/go-vhost
%global goipath         github.com/inconshreveable/go-vhost
%global commit          06d84117953b22058c096b49a429ebd4f3d3d97b

%gometa

# Remove in F33:
%global godevelheader %{expand:
Obsoletes:      golang-github-inconshreveable-go-vhost-devel < 0-0.4
Obsoletes:      golang-github-inconshreveable-go-vhost-unit-test-devel < 0-0.4
}

%global common_description %{expand:
Go-vhost is a simple library that lets you implement virtual hosting
functionality for different protocols (HTTP and TLS so far). Go-vhost has a
high-level and a low-level interface. The high-level interface lets you wrap
existing net.Listeners with "muxer" objects. You can then Listen() on a muxer
for a particular virtual host name of interest which will return to you a
net.Listener for just connections with the virtual hostname of interest.

The lower-level Go-vhost interface are just functions which extract the
name/routing information for the given protocol and return an object
implementing net.Conn which works as if no bytes had been consumed.}

%global golicenses      LICENSE
%global godocs          README.md

Name:           %{goname}
Version:        0
Release:        %autorelease
Summary:        HTTP/TLS hostname multiplexing library for Go

# Upstream license specification: Apache-2.0
# Automatically converted from old format: ASL 2.0 - review is highly recommended.
License:        Apache-2.0
URL:            %{gourl}
Source0:        %{gosource}
# https://github.com/inconshreveable/go-vhost/pull/7
Patch0:         mux_test-missing-format-string.patch

%description
%{common_description}

%gopkg

%prep
%goprep
%patch -P0 -p1

%install
%gopkginstall

%if %{with check}
%check
%gocheck
%endif

%gopkgfiles

%changelog
%autochangelog
