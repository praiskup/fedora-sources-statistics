# Generated by go2rpm
%bcond_without check

%global debug_package %{nil}

# https://github.com/klauspost/pgzip
%global goipath         github.com/klauspost/pgzip
Version:                1.2.5

%gometa

%global common_description %{expand:
Go parallel gzip compression/decompression. This is a fully gzip compatible drop
in replacement for "compress/gzip".

This will split compression into blocks that are compressed in parallel. This
can be useful for compressing big amounts of data. The output is a standard gzip
file.

The gzip decompression is modified so it decompresses ahead of the current
reader. This means that reads will be non-blocking if the decompressor can keep
ahead of your code reading from it. CRC calculation also takes place in a
separate goroutine.}

%global golicenses      LICENSE
%global godocs          README.md

Name:           %{goname}
Release:        %autorelease
Summary:        Go parallel gzip (de)compression

License:        MIT
URL:            %{gourl}
Source0:        %{gosource}

BuildRequires:  golang(github.com/klauspost/compress/flate)

%if %{with check}
# Tests
BuildRequires:  golang(github.com/klauspost/compress/gzip)
%endif

%description
%{common_description}

%gopkg

%prep
%goprep

%install
%gopkginstall

%if %{with check}
%check
%gocheck
%endif

%gopkgfiles

%changelog
%autochangelog
