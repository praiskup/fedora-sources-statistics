# Generated by go2rpm
%bcond_without check
%global debug_package %{nil}

%global debug_package %{nil}

# https://github.com/Masterminds/semver
%global goipath         github.com/Masterminds/semver
Version:                3.3.0

%gometa

%global goaltipaths     github.com/Masterminds/semver/v3

%global common_description %{expand:
The semver package provides the ability to work with Semantic Versions in Go.
Specifically it provides the ability to:

 - Parse semantic versions
 - Sort semantic versions
 - Check if a semantic version fits within a set of constraints
 - Optionally work with a v prefix}

%global golicenses      LICENSE.txt
%global godocs          CHANGELOG.md README.md

%global gosupfiles glide.lock glide.yaml

Name:           %{goname}
Release:        %autorelease
Summary:        Work with semantic versions in Go

License:        MIT
URL:            %{gourl}
Source0:        %{gosource}
Source1:        glide.yaml
Source2:        glide.lock

%description
%{common_description}

%gopkg

%prep
%goprep
cp %{S:1} %{S:2} .

%install
%gopkginstall

%if %{with check}
%check
%gocheck
%endif

%gopkgfiles

%changelog
%autochangelog
