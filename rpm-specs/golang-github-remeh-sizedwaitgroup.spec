# Generated by go2rpm
%bcond_without check

%global debug_package %{nil}

# https://github.com/remeh/sizedwaitgroup
%global goipath         github.com/remeh/sizedwaitgroup
Version:                1.0.0

%gometa

%global common_description %{expand:
SizedWaitGroup has the same role and API as sync.WaitGroup but it adds a limit
of the amount of goroutines started concurrently.

SizedWaitGroup adds the feature of limiting the maximum number of concurrently
started routines. It could for example be used to start multiples routines
querying a database but without sending too much queries in order to not
overload the given database.}

%global golicenses      LICENSE
%global godocs          README.md

Name:           %{goname}
Release:        %autorelease
Summary:        Golang WaitGroup with throttling

License:        MIT
URL:            %{gourl}
Source0:        %{gosource}

%description
%{common_description}

%gopkg

%prep
%goprep

%install
%gopkginstall

%if %{with check}
%check
%gocheck
%endif

%gopkgfiles

%changelog
%autochangelog
