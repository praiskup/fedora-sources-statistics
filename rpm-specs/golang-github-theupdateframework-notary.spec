# Generated by go2rpm
%bcond_without check

# https://github.com/theupdateframework/notary
%global goipath         github.com/theupdateframework/notary
Version:                0.7.0

%gometa

%global common_description %{expand:
The Notary project comprises a server and a client for running and interacting
with trusted collections. See the service architecture documentation for more
information.

Notary aims to make the internet more secure by making it easy for people to
publish and verify content. We often rely on TLS to secure our communications
with a web server, which is inherently flawed, as any compromise of the server
enables malicious content to be substituted for the legitimate content.

With Notary, publishers can sign their content offline using keys kept highly
secure. Once the publisher is ready to make the content available, they can push
their signed trusted collection to a Notary Server.

Consumers, having acquired the publisher's public key through a secure channel,
can then communicate with any Notary server or (insecure) mirror, relying only
on the publisher's key to determine the validity and integrity of the received
content.}

%global golicenses      LICENSE LICENSE-tuf
%global godocs          docs CHANGELOG.md CODE_OF_CONDUCT.md CONTRIBUTING.md\\\
                        CONTRIBUTORS MAINTAINERS_RULES.md README.md\\\
                        README-tuf.md

Name:           %{goname}
Release:        %autorelease
Summary:        Project that allows anyone to have trust over arbitrary collections of data

# Upstream license specification: BSD-3-Clause and Apache-2.0
# Main library: ASL 2.0
# tuf/: BSD
# Automatically converted from old format: BSD and ASL 2.0 - review is highly recommended.
License:        LicenseRef-Callaway-BSD AND Apache-2.0
URL:            %{gourl}
Source0:        %{gosource}
# Change NewBasicKeyRequest to NewKeyRequest to use cfssl 1.4.1
Patch0:         0001-Change-NewBasicKeyRequest-to-NewKeyRequest-to-use-cf.patch
# Update prometheus library
Patch1:         0001-Update-for-newer-prometheus.patch

BuildRequires:  golang(github.com/bugsnag/bugsnag-go)
BuildRequires:  golang(github.com/distribution/distribution/v3/context)
BuildRequires:  golang(github.com/distribution/distribution/v3/health)
BuildRequires:  golang(github.com/distribution/distribution/v3/registry/api/errcode)
BuildRequires:  golang(github.com/distribution/distribution/v3/registry/auth)
BuildRequires:  golang(github.com/distribution/distribution/v3/registry/auth/htpasswd)
BuildRequires:  golang(github.com/distribution/distribution/v3/registry/auth/token)
BuildRequires:  golang(github.com/distribution/distribution/v3/registry/client/auth)
BuildRequires:  golang(github.com/distribution/distribution/v3/registry/client/auth/challenge)
BuildRequires:  golang(github.com/distribution/distribution/v3/registry/client/transport)
BuildRequires:  golang(github.com/distribution/distribution/v3/uuid)
BuildRequires:  golang(github.com/docker/go-connections/tlsconfig)
BuildRequires:  golang(github.com/docker/go/canonical/json)
BuildRequires:  golang(github.com/dvsekhvalnov/jose2go)
BuildRequires:  golang(github.com/go-sql-driver/mysql)
BuildRequires:  golang(github.com/golang/protobuf/proto)
BuildRequires:  golang(github.com/golang/protobuf/ptypes/empty)
BuildRequires:  golang(github.com/gorilla/mux)
BuildRequires:  golang(github.com/jinzhu/gorm)
BuildRequires:  golang(github.com/lib/pq)
BuildRequires:  golang(github.com/prometheus/client_golang/prometheus)
BuildRequires:  golang(github.com/Shopify/logrus-bugsnag)
BuildRequires:  golang(github.com/sirupsen/logrus)
BuildRequires:  golang(github.com/spf13/cobra)
BuildRequires:  golang(github.com/spf13/viper)
BuildRequires:  golang(github.com/stretchr/testify/require)
BuildRequires:  golang(golang.org/x/crypto/ed25519)
BuildRequires:  golang(golang.org/x/crypto/pbkdf2)
BuildRequires:  golang(golang.org/x/net/context)
BuildRequires:  golang(golang.org/x/sys/unix)
BuildRequires:  golang(golang.org/x/term)
BuildRequires:  golang(google.golang.org/grpc)
BuildRequires:  golang(google.golang.org/grpc/codes)
BuildRequires:  golang(google.golang.org/grpc/credentials)
BuildRequires:  golang(google.golang.org/grpc/health)
BuildRequires:  golang(google.golang.org/grpc/health/grpc_health_v1)
BuildRequires:  golang(gopkg.in/rethinkdb/rethinkdb-go.v6)

%if %{with check}
# Tests
BuildRequires:  golang(github.com/distribution/distribution/v3/registry/auth/silly)
BuildRequires:  golang(github.com/mattn/go-sqlite3)
%endif

%description
%{common_description}

%gopkg

%prep
%goprep
%patch -P0 -p1
%patch -P1 -p1
sed -i 's|github.com/docker/distribution|github.com/distribution/distribution/v3|' $(find . -iname "*.go" -type f)
mv tuf/LICENSE LICENSE-tuf
mv tuf/README.md README-tuf.md

%build
for cmd in cmd/* ; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done

%install
%gopkginstall
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/

%if %{with check}
%check
# cmd/notary-signer: needs network
%gocheck -d cmd/notary \
         -d cmd/notary-signer \
         -d utils \
         -d signer/keydbstore \
         -d trustmanager/remoteks \
         -d trustpinning \
         -d client
%endif

%files
%license LICENSE LICENSE-tuf
%doc docs CHANGELOG.md CODE_OF_CONDUCT.md CONTRIBUTING.md CONTRIBUTORS
%doc MAINTAINERS_RULES.md README.md README-tuf.md
%{_bindir}/*

%gopkgfiles

%changelog
%autochangelog
