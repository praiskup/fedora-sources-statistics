# Generated by go2rpm
%bcond_without check

%global debug_package %{nil}

# https://github.com/go-warnings/warnings
%global goipath         gopkg.in/warnings.v0
%global forgeurl        https://github.com/go-warnings/warnings
Version:                0.1.2

%gometa

# Remove in F33:
%global godevelheader %{expand:
Obsoletes:      golang-gopkg-warnings-0-devel < 0.1.2-5
}

%global common_description %{expand:
A recurring programming pattern pattern is to allow interrupting the flow on any
received error. But what if there are errors that should be noted but still not
fatal, for which the flow should not be interrupted? Implementing such logic at
each if statement would make the code complex and the flow much harder to
follow.

Package Warnings provides the Collector type and a clean and simple pattern for
achieving such logic. The Collector takes care of deciding when to break the
flow and when to continue, collecting any non-fatal errors (warnings) along the
way. The only requirement is that fatal and non-fatal errors can be
distinguished programmatically.}

%global golicenses      LICENSE
%global godocs          README

Name:           %{goname}
Release:        %autorelease
Summary:        Implements error handling with non-fatal errors (warnings)

# Upstream license specification: BSD-2-Clause
# Automatically converted from old format: BSD - review is highly recommended.
License:        LicenseRef-Callaway-BSD
URL:            %{gourl}
Source0:        %{gosource}

%description
%{common_description}

%gopkg

%prep
%goprep

%install
%gopkginstall

%if %{with check}
%check
%gocheck
%endif

%gopkgfiles

%changelog
%autochangelog
