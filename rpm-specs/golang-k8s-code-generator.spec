# Generated by go2rpm
%bcond_without check

# https://github.com/kubernetes/code-generator
%global goipath         k8s.io/code-generator
%global forgeurl        https://github.com/kubernetes/code-generator
Version:                1.22.0
%global tag             kubernetes-1.22.0
%global distprefix      %{nil}

%gometa

%global common_description %{expand:
Golang code-generators used to implement Kubernetes-style API types.}

%global golicenses      LICENSE
%global godocs          CONTRIBUTING.md README.md code-of-\\\
                        conduct.md

Name:           %{goname}
Release:        %autorelease
Summary:        Generators for kube-like API types

# Upstream license specification: Apache-2.0
# Automatically converted from old format: ASL 2.0 - review is highly recommended.
License:        Apache-2.0
URL:            %{gourl}
Source0:        %{gosource}

BuildRequires:  golang(github.com/gogo/protobuf/gogoproto)
BuildRequires:  golang(github.com/gogo/protobuf/proto)
BuildRequires:  golang(github.com/gogo/protobuf/sortkeys)
BuildRequires:  golang(github.com/gogo/protobuf/vanity/command)
BuildRequires:  golang(github.com/googleapis/gnostic/openapiv2)
BuildRequires:  golang(github.com/spf13/pflag)
BuildRequires:  golang(gopkg.in/yaml.v2)
BuildRequires:  golang(k8s.io/api/autoscaling/v1)
BuildRequires:  golang(k8s.io/apimachinery/pkg/api/errors)
BuildRequires:  golang(k8s.io/apimachinery/pkg/apis/meta/v1)
BuildRequires:  golang(k8s.io/apimachinery/pkg/conversion)
BuildRequires:  golang(k8s.io/apimachinery/pkg/labels)
BuildRequires:  golang(k8s.io/apimachinery/pkg/runtime)
BuildRequires:  golang(k8s.io/apimachinery/pkg/runtime/schema)
BuildRequires:  golang(k8s.io/apimachinery/pkg/runtime/serializer)
BuildRequires:  golang(k8s.io/apimachinery/pkg/types)
BuildRequires:  golang(k8s.io/apimachinery/pkg/util/runtime)
BuildRequires:  golang(k8s.io/apimachinery/pkg/watch)
BuildRequires:  golang(k8s.io/client-go/discovery)
BuildRequires:  golang(k8s.io/client-go/discovery/fake)
BuildRequires:  golang(k8s.io/client-go/rest)
BuildRequires:  golang(k8s.io/client-go/testing)
BuildRequires:  golang(k8s.io/client-go/tools/cache)
BuildRequires:  golang(k8s.io/client-go/util/flowcontrol)
BuildRequires:  golang(k8s.io/gengo/args)
# BuildRequires:  golang(k8s.io/gengo/examples/deepcopy-gen/generators)
# BuildRequires:  golang(k8s.io/gengo/examples/defaulter-gen/generators)
# BuildRequires:  golang(k8s.io/gengo/examples/import-boss/generators)
# BuildRequires:  golang(k8s.io/gengo/examples/set-gen/generators)
BuildRequires:  golang(k8s.io/gengo/generator)
BuildRequires:  golang(k8s.io/gengo/namer)
BuildRequires:  golang(k8s.io/gengo/parser)
BuildRequires:  golang(k8s.io/gengo/types)
BuildRequires:  golang(k8s.io/klog/v2)
BuildRequires:  golang(k8s.io/kube-openapi/cmd/openapi-gen/args)
BuildRequires:  golang(k8s.io/kube-openapi/pkg/common)
BuildRequires:  golang(k8s.io/kube-openapi/pkg/generators)
BuildRequires:  golang(k8s.io/kube-openapi/pkg/schemaconv)
BuildRequires:  golang(k8s.io/kube-openapi/pkg/util/proto)
BuildRequires:  golang(k8s.io/kube-openapi/pkg/validation/spec)

%description
%{common_description}

%gopkg

%prep
%goprep

%build
for cmd in cmd/* ; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done

%install
%gopkginstall
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/

%if %{with check}
%check
%gocheck
%endif

%files
%license LICENSE
%doc CONTRIBUTING.md README.md code-of-conduct.md
%{_bindir}/*

%gopkgfiles

%changelog
%autochangelog
