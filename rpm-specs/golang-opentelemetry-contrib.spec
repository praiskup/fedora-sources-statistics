# Generated by go2rpm 1.14.0
%bcond check 1
%bcond bootstrap 0

%global debug_package %{nil}

%if %{with bootstrap}
%global __requires_exclude %{?__requires_exclude:%{__requires_exclude}|}^golang\\(.*\\)$
%endif

# https://github.com/open-telemetry/opentelemetry-go-contrib
%global goipath         go.opentelemetry.io/contrib
%global forgeurl        https://github.com/open-telemetry/opentelemetry-go-contrib
Version:                1.28.0

%gometa -L

%global common_description %{expand:
Collection of extensions for OpenTelemetry-Go.}

%global golicenses      LICENSE
%global godocs          README.md RELEASING.md CHANGELOG.md CONTRIBUTING.md

Name:           golang-opentelemetry-contrib
Release:        %autorelease
Summary:        Collection of extensions for OpenTelemetry-Go

License:        Apache-2.0
URL:            %{gourl}
Source:         %{gosource}

%description %{common_description}

%gopkg

%prep
%goprep -A
%autopatch -p1

rm -rfv instrumentation/github.com/astaxie/beego/
# examples are not packaged
rm -rvf propagators/opencensus/examples
# drop until github.com/GoogleCloudPlatform/opentelemetry-operations-go is packaged
rm -rvf detectors/gcp

# Remove deprectaed opencensus
rm -rvf propagators/opencensus/

%if %{without bootstrap}
%generate_buildrequires
%go_generate_buildrequires
%endif

%install
%gopkginstall

%if %{without bootstrap}
%if %{with check}
%check
for test in "TestDefaultConfig" "TestPartialUserProvidedConfig" \
; do
awk -i inplace '/^func.*'"$test"'\(/ { print; print "\tt.Skip(\"disabled failing test\")"; next}1' $(grep -rl $test)
done
%ifarch s390x
%gocheck -t instrumentation -d go.opentelemetry.io/contrib/instrgen/driver -d go.opentelemetry.io/contrib/samplers/probability/consistent
%else
%gocheck -t instrumentation -d go.opentelemetry.io/contrib/instrgen/driver
%endif
%endif
%endif

%gopkgfiles

%changelog
%autochangelog
