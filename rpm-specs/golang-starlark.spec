# Generated by go2rpm
# https://github.com/google/starlark-go/issues/335
%ifnarch %{arm} %{ix86}
%bcond_without check
%endif

# Avoid noarch package built differently on different architectures
%global __requires_exclude %{?__requires_exclude:%{__requires_exclude}|}^golang\\(golang.org/x/sys/unix\\)$

# https://github.com/google/starlark-go
%global goipath             go.starlark.net
%global forgeurl            https://github.com/google/starlark-go
%global commit              0d7263928a74a8d4cf6e23b648bace6925b65dbb

%gometa

%global common_description %{expand:
Starlark is a dialect of Python intended for use as a configuration language.
Like Python, it is an untyped dynamic language with high-level data types,
first-class functions with lexical scope, and garbage collection. Unlike
CPython, independent Starlark threads execute in parallel, so Starlark
workloads scale well on parallel machines. Starlark is a small and simple
language with a familiar and highly readable syntax. You can use it as an
expressive notation for structured data, defining functions to eliminate
repetition, or you can use it to add scripting capabilities to an existing
application.}

%global golicenses          LICENSE
%global godocs              *.md

%global gosupfiles      ${star[@]}

Name:           %{goname}
Version:        0
Release:        %autorelease
Summary:        Dialect of Python intended for use as a configuration language

# A couple of test files are under the Apache License 2.0
# Automatically converted from old format: BSD and ASL 2.0 - review is highly recommended.
License:        LicenseRef-Callaway-BSD AND Apache-2.0
URL:            %{gourl}
Source0:        %{gosource}

BuildRequires:  golang(github.com/chzyer/readline)
BuildRequires:  golang(golang.org/x/sys/unix)
BuildRequires:  golang(golang.org/x/term)
BuildRequires:  golang(google.golang.org/protobuf/encoding/protojson)
BuildRequires:  golang(google.golang.org/protobuf/encoding/prototext)
BuildRequires:  golang(google.golang.org/protobuf/proto)
BuildRequires:  golang(google.golang.org/protobuf/reflect/protodesc)
BuildRequires:  golang(google.golang.org/protobuf/reflect/protoreflect)
BuildRequires:  golang(google.golang.org/protobuf/reflect/protoregistry)
BuildRequires:  golang(google.golang.org/protobuf/types/descriptorpb)
BuildRequires:  golang(google.golang.org/protobuf/types/dynamicpb)

%description
%{common_description}

%gopkg

%prep
%goprep
%go_generate_buildrequires

%build
for cmd in cmd/* ; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done

%install
mapfile -t star <<< $(find . -name "*.star" -type f)
%gopkginstall
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/

%if %{with check}
%check
%gocheck
%endif

%files
%license %{golicenses}
%doc %{godocs}
%{_bindir}/*

%gopkgfiles

%changelog
%autochangelog
