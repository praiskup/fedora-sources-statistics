# generated by cabal-rpm-2.2.1
# https://docs.fedoraproject.org/en-US/packaging-guidelines/Haskell/

# failing (also in stackage)
%bcond_with tests

Name:           happy
Version:        1.20.1.1
Release:        %autorelease
Summary:        Parser Generator for Haskell

License:        BSD-2-Clause
Url:            https://hackage.haskell.org/package/%{name}
# Begin cabal-rpm sources:
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz
# End cabal-rpm sources

# Begin cabal-rpm deps:
BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros
BuildRequires:  ghc-array-devel
BuildRequires:  ghc-base-devel
BuildRequires:  ghc-containers-devel
BuildRequires:  ghc-mtl-devel
%if %{with tests}
BuildRequires:  ghc-process-devel
%endif
# End cabal-rpm deps
BuildRequires:  autoconf
BuildRequires:  docbook-dtds
BuildRequires:  docbook-style-xsl
BuildRequires:  libxml2
BuildRequires:  libxslt
BuildRequires:  make

%description
Happy is a parser generator for Haskell. Given a grammar specification in BNF,
Happy generates Haskell code to parse the grammar. Happy works in a similar way
to the 'yacc' tool for C.


%prep
# Begin cabal-rpm setup:
%setup -q
# End cabal-rpm setup


%build
# Begin cabal-rpm build:
%ghc_bin_build
# End cabal-rpm build

cd doc
autoreconf
./configure
make html
cd ..


%install
# Begin cabal-rpm install
%ghc_bin_install
# End cabal-rpm install


%check
%if %{with tests}
PATH=%{buildroot}%{_bindir}:$PATH
%cabal_test
%endif


%files
# Begin cabal-rpm files:
%license LICENSE
%doc ChangeLog.md examples
%{_bindir}/%{name}
%{_datadir}/%{name}-%{version}
# End cabal-rpm files
%doc doc/happy
%{_datadir}/%{name}-%{version}


%changelog
%autochangelog
