# Generated by go2rpm 1.14.0
%bcond check 1
%bcond bootstrap 0

%if %{with bootstrap}
%global debug_package %{nil}
%endif

%if %{with bootstrap}
%global __requires_exclude %{?__requires_exclude:%{__requires_exclude}|}^golang\\(.*\\)$
%endif

# https://github.com/restic/restic
%global goipath         github.com/restic/restic
Version:                0.17.0

%gometa -L -f

%global common_description %{expand:
Fast, secure, efficient backup program.

restic supports the following backends for storing backups natively:

* Local directory
* sftp server (via SSH)
* HTTP REST server (protocol, rest-server)
* Amazon S3 (either from Amazon or using the Minio server)
* OpenStack Swift
* BackBlaze B2
* Microsoft Azure Blob Storage
* Google Cloud Storage
* And many other services via the rclone Backend
}

%global golicenses      LICENSE
%global godocs          doc CONTRIBUTING.md CHANGELOG.md README.md

Name:           restic
Release:        %autorelease
Summary:        Fast, secure, efficient backup program

License:        BSD-2-Clause
URL:            %{gourl}
Source:         %{gosource}

%description %{common_description}

%gopkg

%prep
%goprep -A
%autopatch -p1

# Use original bazil.org/fuse library as we don't need MacOS support provided by
# this anacrolix fork
sed -i "s|github.com/anacrolix/fuse|bazil.org/fuse|" $(find . -name "*.go" -type f)
# Use original blaze library
sed -i "s|github.com/Backblaze/blazer|github.com/kurin/blazer|" $(find . -name "*.go" -type f)

%if %{without bootstrap}
%generate_buildrequires
%go_generate_buildrequires
%endif

%if %{without bootstrap}
%build
%gobuild -o %{gobuilddir}/bin/%{name} %{goipath}/cmd/restic
%endif

%install
%if %{without bootstrap}
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/
%endif

# Install manpages
install -Dpm 0644 doc/man/%{name}*.1 -t %{buildroot}%{_mandir}/man1/

# Install shell completions
install -Dpm 0644 doc/bash-completion.sh %{buildroot}%{bash_completions_dir}/%{name}
install -Dpm 0644 doc/fish-completion.fish %{buildroot}%{fish_completions_dir}/%{name}.fish
install -Dpm 0644 doc/zsh-completion.zsh  %{buildroot}%{zsh_completions_dir}/_%{name}

%if %{without bootstrap}
%if %{with check}
%check
#Skip tests using fuse due to root requirement
export RESTIC_TEST_FUSE=0
# TestNodeRestoreAt TestOverwriteXattr fails to build in mock due to xattr and SELinux issues.
for test in "TestNodeRestoreAt" "TestOverwriteXattr" \
            "TestStdinFromCommand" "TestStdinFromCommandNoOutput" \
; do
awk -i inplace '/^func.*'"$test"'\(/ { print; print "\tt.Skip(\"disabled failing test\")"; next}1' $(grep -rl $test)
done
%gocheck
%endif
%endif

%if %{without bootstrap}
%files
%license LICENSE
%doc doc CONTRIBUTING.md CHANGELOG.md README.md
%{_bindir}/restic
%{_mandir}/man1/%{name}*.1*
%{bash_completions_dir}/%{name}
%{fish_completions_dir}/%{name}.fish
%{zsh_completions_dir}/_%{name}
%endif

%changelog
%autochangelog
