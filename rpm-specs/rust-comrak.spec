# Generated by rust2rpm 24
# * missing dev-dependencies: ntest ^0.9, propfuzz 0.0.1
%bcond_with check

%global crate comrak

Name:           rust-comrak
Version:        0.18.0
Release:        %autorelease
Summary:        100% CommonMark-compatible GitHub Flavored Markdown parser and formatter

License:        BSD-2-Clause
URL:            https://crates.io/crates/comrak
Source:         %{crates_source}
# Manually created patch for downstream crate metadata changes
# * drop unused emoji shortcodes support (missing dependency: emojis ^0.5.2)
# * drop missing dev-dependencies: ntest ^0.9, propfuzz 0.0.1
Patch:          comrak-fix-metadata.diff

BuildRequires:  rust-packaging >= 21

%global _description %{expand:
A 100% CommonMark-compatible GitHub Flavored Markdown parser and
formatter.}

%description %{_description}

%package     -n %{crate}
Summary:        %{summary}
# (MIT OR Apache-2.0) AND Unicode-DFS-2016
# 0BSD OR MIT OR Apache-2.0
# Apache-2.0 OR BSL-1.0
# Apache-2.0 OR MIT
# Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT
# BSD-2-Clause
# BSD-3-Clause
# MIT
# MIT OR Apache-2.0
# MIT OR Zlib OR Apache-2.0
# Unlicense OR MIT
License:        BSD-2-Clause AND BSD-3-Clause AND MIT AND Unicode-DFS-2016 AND (0BSD OR MIT OR Apache-2.0) AND (Apache-2.0 OR BSL-1.0) AND (Apache-2.0 OR MIT) AND (Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT) AND (MIT OR Zlib OR Apache-2.0) AND (Unlicense OR MIT)
# LICENSE.dependencies contains a full license breakdown

%description -n %{crate} %{_description}

%files       -n %{crate}
%license COPYING
%license LICENSE.dependencies
%doc CODE_OF_CONDUCT.md
%doc README.md
%doc RELEASE_CHECKLIST.md
%doc changelog.txt
%{_bindir}/comrak

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/COPYING
%doc %{crate_instdir}/CODE_OF_CONDUCT.md
%doc %{crate_instdir}/README.md
%doc %{crate_instdir}/RELEASE_CHECKLIST.md
%doc %{crate_instdir}/changelog.txt
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+clap-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+clap-devel %{_description}

This package contains library source intended for building other packages which
use the "clap" feature of the "%{crate}" crate.

%files       -n %{name}+clap-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+cli-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+cli-devel %{_description}

This package contains library source intended for building other packages which
use the "cli" feature of the "%{crate}" crate.

%files       -n %{name}+cli-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+shell-words-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+shell-words-devel %{_description}

This package contains library source intended for building other packages which
use the "shell-words" feature of the "%{crate}" crate.

%files       -n %{name}+shell-words-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+syntect-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+syntect-devel %{_description}

This package contains library source intended for building other packages which
use the "syntect" feature of the "%{crate}" crate.

%files       -n %{name}+syntect-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+xdg-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+xdg-devel %{_description}

This package contains library source intended for building other packages which
use the "xdg" feature of the "%{crate}" crate.

%files       -n %{name}+xdg-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version_no_tilde} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build
%cargo_license_summary
%{cargo_license} > LICENSE.dependencies

%install
%cargo_install

%if %{with check}
%check
%cargo_test
%endif

%changelog
%autochangelog
