# Generated by rust2rpm 24
%bcond_without check
%global debug_package %{nil}

%global crate der

Name:           rust-der0.4
Version:        0.4.5
Release:        %autorelease
Summary:        Pure Rust embedded-friendly implementation of DER for ASN.1

License:        Apache-2.0 OR MIT
URL:            https://crates.io/crates/der
Source:         %{crates_source}

BuildRequires:  rust-packaging >= 21

%global _description %{expand:
Pure Rust embedded-friendly implementation of the Distinguished Encoding
Rules (DER) for Abstract Syntax Notation One (ASN.1) as described in ITU
X.690 with full support for heapless no_std targets.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE-APACHE
%license %{crate_instdir}/LICENSE-MIT
%doc %{crate_instdir}/CHANGELOG.md
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+alloc-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+alloc-devel %{_description}

This package contains library source intended for building other packages which
use the "alloc" feature of the "%{crate}" crate.

%files       -n %{name}+alloc-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+bigint-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+bigint-devel %{_description}

This package contains library source intended for building other packages which
use the "bigint" feature of the "%{crate}" crate.

%files       -n %{name}+bigint-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+const-oid-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+const-oid-devel %{_description}

This package contains library source intended for building other packages which
use the "const-oid" feature of the "%{crate}" crate.

%files       -n %{name}+const-oid-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+crypto-bigint-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+crypto-bigint-devel %{_description}

This package contains library source intended for building other packages which
use the "crypto-bigint" feature of the "%{crate}" crate.

%files       -n %{name}+crypto-bigint-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+der_derive-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+der_derive-devel %{_description}

This package contains library source intended for building other packages which
use the "der_derive" feature of the "%{crate}" crate.

%files       -n %{name}+der_derive-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+derive-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+derive-devel %{_description}

This package contains library source intended for building other packages which
use the "derive" feature of the "%{crate}" crate.

%files       -n %{name}+derive-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+oid-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+oid-devel %{_description}

This package contains library source intended for building other packages which
use the "oid" feature of the "%{crate}" crate.

%files       -n %{name}+oid-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+std-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+std-devel %{_description}

This package contains library source intended for building other packages which
use the "std" feature of the "%{crate}" crate.

%files       -n %{name}+std-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version_no_tilde} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
%cargo_test
%endif

%changelog
%autochangelog
