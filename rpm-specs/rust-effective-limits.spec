# Generated by rust2rpm 25
%bcond_without check
%global debug_package %{nil}

%global crate effective-limits

Name:           rust-effective-limits
Version:        0.5.5
Release:        %autorelease
Summary:        Estimate effective resource limits for a process

License:        Apache-2.0
URL:            https://crates.io/crates/effective-limits
Source:         %{crates_source}
# Automatically generated patch to strip dependencies and normalize metadata
Patch:          effective-limits-fix-metadata-auto.diff
# Manually created patch for downstream crate metadata changes
# * prevent test-only executable from being built and shipped
# * exclude files that are only useful for upstream development
Patch:          effective-limits-fix-metadata.diff
# https://github.com/rbtcollins/effective-limits.rs/pull/46
Patch:          0001-fix-compilation-of-tests-on-32-bit-architectures.patch

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
Estimate effective resource limits for a process e.g. how much RAM is
available for use.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE-APACHE.txt
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
# * skip tests that require running the dropped test executable
%cargo_test -- -- --exact --skip tests::test_no_ulimit --skip tests::test_ulimit
%endif

%changelog
%autochangelog
