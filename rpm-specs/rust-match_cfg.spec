# Generated by rust2rpm 24
%bcond_without check
%global debug_package %{nil}

%global crate match_cfg

Name:           rust-match_cfg
Version:        0.1.0
Release:        %autorelease
Summary:        Macro to define an item depending on a large number of #[cfg] parameters

# Upstream license specification: MIT/Apache-2.0
License:        MIT OR Apache-2.0
URL:            https://crates.io/crates/match_cfg
Source:         %{crates_source}

BuildRequires:  rust-packaging >= 21

%global _description %{expand:
A convenience macro to ergonomically define an item depending on a large
number of `#[cfg]` parameters. Structured like match statement, the
first matching branch is the item that gets emitted.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE-APACHE
%license %{crate_instdir}/LICENSE-MIT
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+use_core-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+use_core-devel %{_description}

This package contains library source intended for building other packages which
use the "use_core" feature of the "%{crate}" crate.

%files       -n %{name}+use_core-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version_no_tilde} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
%ifarch %{ix86} %{arm}
# * ignore one test failure on 32-bit architectures:
#   https://github.com/gnzlbg/match_cfg/issues/1
%cargo_test -- -- --skip tests::tests
%else
%cargo_test
%endif
%endif

%changelog
%autochangelog
