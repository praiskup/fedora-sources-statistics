# Generated by rust2rpm 26
%bcond_without check
%global debug_package %{nil}

%global crate two-face

Name:           rust-two-face
Version:        0.4.0
Release:        %autorelease
Summary:        Extra syntax and theme definitions for syntect

# * two-face crate: MIT OR Apache-2.0
# * bundled content: Apache-2.0, BSD-2-Clause, BSD-2-Clause-Views, BSD-3-Clause, MIT, Unlicense, WTFPL, UltraPermissive
License:        (MIT OR Apache-2.0) AND Apache-2.0 AND BSD-2-Clause AND BSD-2-Clause-Views AND BSD-3-Clause AND MIT AND Unlicense AND WTFPL AND LicenseRef-Fedora-UltraPermissive
URL:            https://crates.io/crates/two-face
Source:         %{crates_source}
# Manually created patch for downstream crate metadata changes
# * adapt license tag to reflect bundled content
Patch:          two-face-fix-metadata.diff

BuildRequires:  cargo-rpm-macros >= 24

%global _description %{expand:
Extra syntax and theme definitions for syntect.}

%description %{_description}

%package        devel
Summary:        %{summary}
BuildArch:      noarch

# code and contents derived from a bat v0.24.0 snapshot from 2023-06-14
# from: https://github.com/sharkdp/bat/tree/8676bbf
Provides:       bundled(crate(bat)) = 0.24.0~git8676bbf

# Sublime Text 3 language definitions for syntax highlighting
# from: https://github.com/sublimehq/Packages/tree/759d6ee
# - all except Rust: LicenseRef-Fedora-UltraPermissive
#   https://gitlab.com/fedora/legal/fedora-license-data/-/issues/516
# - Rust: MIT
Provides:       bundled(sublime-syntax) = 4075~git759d6ee

# third-party language definitions for syntax highlighting
# AWK: MIT
Provides:       bundled(sublime-syntax-AWK)
# Ada: MIT
Provides:       bundled(sublime-syntax-Ada)
# Apache: BSD-2-Clause-Views
Provides:       bundled(sublime-syntax-Apache)
# AsciiDoc: MIT
Provides:       bundled(sublime-syntax-AsciiDoc)
# CMake: MIT
Provides:       bundled(sublime-syntax-CMake)
# CoffeeScript: MIT
Provides:       bundled(sublime-syntax-CoffeeScript)
# Crontab: MIT
Provides:       bundled(sublime-syntax-Crontab)
# Crontab/cron_descriptor: MIT
Provides:       bundled(sublime-syntax-Crontab-cron_descriptor)
# Crystal: Apache-2.0
Provides:       bundled(sublime-syntax-Crystal)
# Dart: MIT
Provides:       bundled(sublime-syntax-Dart)
# Docker: MIT
Provides:       bundled(sublime-syntax-Docker)
# DotENV: MIT
Provides:       bundled(sublime-syntax-DotENV)
# Elixir: MIT
Provides:       bundled(sublime-syntax-Elixir)
# Elm: MIT
Provides:       bundled(sublime-syntax-Elm)
# Email: MIT
Provides:       bundled(sublime-syntax-Email)
# Fish: MIT
Provides:       bundled(sublime-syntax-Fish)
# GLSL: Unlicense
Provides:       bundled(sublime-syntax-GLSL)
# GraphQL: WTFPL
Provides:       bundled(sublime-syntax-GraphQL)
# Groff: MIT
Provides:       bundled(sublime-syntax-Groff)
# HTML (Twig): BSD-3-Clause
Provides:       bundled(sublime-syntax-HTML-Twig)
# JavaScript (Babel): MIT
Provides:       bundled(sublime-syntax-JavaScript-Babel)
# Jsonnet: Apache-2.0
Provides:       bundled(sublime-syntax-Jsonnet)
# Julia: MIT
Provides:       bundled(sublime-syntax-Julia)
# Kotlin: Apache-2.0
Provides:       bundled(sublime-syntax-Kotlin)
# LLVM: MIT
Provides:       bundled(sublime-syntax-LLVM)
# Lean: Apache-2.0
Provides:       bundled(sublime-syntax-Lean)
# LiveScript: MIT
Provides:       bundled(sublime-syntax-LiveScript)
# MediaWiki: MIT
Provides:       bundled(sublime-syntax-MediaWiki)
# Nginx: MIT
Provides:       bundled(sublime-syntax-Nginx)
# Ninja: MIT
Provides:       bundled(sublime-syntax-Ninja)
# Nix: MIT
Provides:       bundled(sublime-syntax-Nix)
# Org mode: BSD-2-Clause
Provides:       bundled(sublime-syntax-Org-mode)
# PowerShell: MIT
Provides:       bundled(sublime-syntax-PowerShell)
# Protobuf: MIT
Provides:       bundled(sublime-syntax-Protobuf)
# Puppet: MIT
Provides:       bundled(sublime-syntax-Puppet)
# PureScript: MIT AND Unlicense
Provides:       bundled(sublime-syntax-PureScript)
# QML: MIT
Provides:       bundled(sublime-syntax-QML)
# Robot: MIT
Provides:       bundled(sublime-syntax-Robot)
# SCSS_Sass: MIT
Provides:       bundled(sublime-syntax-SCSS_Sass)
# SLS: Apache-2.0
Provides:       bundled(sublime-syntax-SLS)
# Slim: MIT
Provides:       bundled(sublime-syntax-Slim)
# Stylus: MIT
Provides:       bundled(sublime-syntax-Stylus)
# SublimeEthereum: MIT
Provides:       bundled(sublime-syntax-SublimeEthereum)
# Svelte: MIT
Provides:       bundled(sublime-syntax-Svelte)
# Swift: MIT
Provides:       bundled(sublime-syntax-Swift)
# SystemVerilog: MIT
Provides:       bundled(sublime-syntax-SystemVerilog)
# TOML: MIT
Provides:       bundled(sublime-syntax-TOML)
# Terraform: MIT
Provides:       bundled(sublime-syntax-Terraform)
# TypeScript: MIT
Provides:       bundled(sublime-syntax-TypeScript)
# VimL: MIT
Provides:       bundled(sublime-syntax-VimL)
# Vue: MIT
Provides:       bundled(sublime-syntax-Vue)
# Zig: MIT
Provides:       bundled(sublime-syntax-Zig)
# cmd-help: MIT
Provides:       bundled(sublime-syntax-cmd-help)
# gnuplot: MIT
Provides:       bundled(sublime-syntax-gnuplot)
# hosts: MIT
Provides:       bundled(sublime-syntax-hosts)
# http-request-response: MIT
Provides:       bundled(sublime-syntax-http-request-response)
# varlink: MIT
Provides:       bundled(sublime-syntax-varlink)

# third-party themes for syntax highlighting
# 1337-Scheme: MIT
Provides:       bundled(sublime-theme-1337-Scheme)
# Coldark: MIT
Provides:       bundled(sublime-theme-Coldark)
# Solarized: MIT
Provides:       bundled(sublime-theme-Solarized)
# TwoDark: MIT
Provides:       bundled(sublime-theme-TwoDark)
# dracula-sublime: MIT
Provides:       bundled(sublime-theme-dracula-sublime)
# gruvbox: MIT
Provides:       bundled(sublime-theme-gruvbox)
# onehalf: MIT
Provides:       bundled(sublime-theme-onehalf)
# sublime-monokai-extended: MIT
Provides:       bundled(sublime-theme-sublime-monokai-extended)
# zenburn: BSD-2-Clause-Views
Provides:       bundled(sublime-theme-zenburn)

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE-APACHE
%license %{crate_instdir}/LICENSE-MIT
%doc %{crate_instdir}/CHANGELOG.md
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+syntect-default-fancy-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+syntect-default-fancy-devel %{_description}

This package contains library source intended for building other packages which
use the "syntect-default-fancy" feature of the "%{crate}" crate.

%files       -n %{name}+syntect-default-fancy-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+syntect-default-onig-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+syntect-default-onig-devel %{_description}

This package contains library source intended for building other packages which
use the "syntect-default-onig" feature of the "%{crate}" crate.

%files       -n %{name}+syntect-default-onig-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+syntect-fancy-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+syntect-fancy-devel %{_description}

This package contains library source intended for building other packages which
use the "syntect-fancy" feature of the "%{crate}" crate.

%files       -n %{name}+syntect-fancy-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+syntect-onig-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+syntect-onig-devel %{_description}

This package contains library source intended for building other packages which
use the "syntect-onig" feature of the "%{crate}" crate.

%files       -n %{name}+syntect-onig-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep

%generate_buildrequires
%cargo_generate_buildrequires

%build
%cargo_build

%install
%cargo_install

%if %{with check}
%check
%cargo_test
%endif

%changelog
%autochangelog
